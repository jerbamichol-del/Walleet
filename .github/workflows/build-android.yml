name: Android Debug Build

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-android-debug:
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Setup Java 21
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "21"

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Accept SDK licenses
        run: yes | sdkmanager --licenses

      - name: Install deps (npm)
        run: npm install --legacy-peer-deps

      - name: Ensure Capacitor deps (idempotent)
        run: |
          npm install @capacitor/android --legacy-peer-deps
          npm install @capacitor-community/speech-recognition --legacy-peer-deps || true

      # === Firma debug STABILE (usa il secret creato prima) ===
      - name: Install stable debug keystore
        if: ${{ secrets.ANDROID_DEBUG_KEYSTORE_B64 != '' }}
        env:
          ANDROID_DEBUG_KEYSTORE_B64: ${{ secrets.ANDROID_DEBUG_KEYSTORE_B64 }}
        run: |
          mkdir -p ~/.android
          echo "$ANDROID_DEBUG_KEYSTORE_B64" | base64 -d > ~/.android/debug.keystore
          chmod 600 ~/.android/debug.keystore
          echo "Installed stable debug keystore at ~/.android/debug.keystore"

      # === Versioning AUTO: ogni run aumenta il versionCode e aggiorna versionName ===
      - name: Compute version code/name
        shell: bash
        run: |
          RUN_NO="${GITHUB_RUN_NUMBER:-0}"
          VERSION_CODE=$((100000 + RUN_NO))
          VERSION_NAME="$(node -p "require('./package.json').version")+${RUN_NO}"
          {
            echo "VERSION_CODE=$VERSION_CODE"
            echo "VERSION_NAME=$VERSION_NAME"
          } >> "$GITHUB_ENV"
          echo "Computed VERSION_CODE=$VERSION_CODE"
          echo "Computed VERSION_NAME=$VERSION_NAME"

      # === Prepara gli asset web per Capacitor ===
      # Se esiste legacy_www_final/index.html usa il bundle "buono" estratto dall'APK;
      # altrimenti builda con Vite e copia dist/ -> www/
      - name: Prepare web assets (legacy or build)
        shell: bash
        run: |
          rm -rf www
          if [ -f legacy_www_final/index.html ]; then
            echo "Using legacy_www_final as webDir"
            mkdir -p www
            cp -R legacy_www_final/* www/
          else
            echo "Building with Vite -> dist, then copying to www/"
            npm run build
            mv dist www
          fi
          test -f www/index.html

      - name: Capacitor sync (android)
        run: npx cap add android || npx cap sync android

      - name: Sanity check (index + assets)
        run: |
          test -f android/app/src/main/assets/public/index.html
          ls -l android/app/src/main/assets/public | head
          ls -l android/app/src/main/assets/public/assets 2>/dev/null | head || true

      - name: Gradle build (debug)
        working-directory: ./android
        run: |
          chmod +x ./gradlew
          ./gradlew clean assembleDebug \
            -PVERSION_CODE=${{ env.VERSION_CODE }} \
            -PVERSION_NAME=${{ env.VERSION_NAME }}

      - name: Upload APK (android-build)
        uses: actions/upload-artifact@v4
        with:
          name: android-build
          path: android/app/build/outputs/apk/debug/*.apk
          if-no-files-found: warn
