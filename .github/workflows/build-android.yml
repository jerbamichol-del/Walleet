name: Android Debug Build

on:
  push:
    branches: [ "main", "feat/**", "fix/**" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-android-debug:
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "npm"

      - name: Install deps (npm ci)
        run: npm ci

      # ✅ Usa i vecchi asset (legacy) ma inietta uno shim biometrico
      - name: Prepare web assets (LEGACY + inject biometric shim)
        shell: bash
        run: |
          set -e
          rm -rf www
          if [[ -f legacy_www_final/index.html ]]; then
            echo "Using legacy_www_final as webDir"
            mkdir -p www
            cp -a legacy_www_final/* www/

            # --- Shim biometria: intercetta "Abilita Impronta" e abilita auto-prompt ---
            cat > www/shim-biometric.js <<'EOF'
// Shim biometria per UI legacy: intercetta "Abilita Impronta" e usa il plugin nativo
(function () {
  const S = { enabledKey: 'biometricsEnabled', cooldown: false };

  function getPlugin() {
    const cap = (window).Capacitor || {};
    const P = (cap.Plugins || {});
    return (window).NativeBiometric || P.NativeBiometric || P.CapacitorNativeBiometric || P.CapgoNativeBiometric || null;
  }

  async function prompt(reason) {
    const NB = getPlugin();
    if (!NB) return;
    if (S.cooldown) return;
    S.cooldown = true;
    setTimeout(() => (S.cooldown = false), 1500);
    try {
      await NB.verifyIdentity({
        reason: reason || 'Conferma identità',
        title: 'Autenticazione',
        subtitle: 'Conferma identità',
        description: 'Usa impronta/volto o PIN',
        useFallback: true,
        android: { deviceCredentialAllowed: true, confirmationRequired: true },
      });
      try { localStorage.setItem(S.enabledKey, 'true'); } catch {}
    } catch (e) { /* annullata/non riuscita: nessuna azione distruttiva */ }
  }

  function hookButtons() {
    const candidates = document.querySelectorAll('button, [role="button"]');
    candidates.forEach((el) => {
      const txt = (el.textContent || '').trim().toLowerCase();
      if (!el.__bioHooked && /abilita\s+impronta/.test(txt)) {
        el.__bioHooked = true;
        el.addEventListener('click', () => {
          setTimeout(() => prompt('Abilita accesso veloce'), 0);
        }, { passive: true });
      }
    });
  }

  function autoPromptIfEnabled() {
    try {
      if (localStorage.getItem(S.enabledKey) === 'true') {
        prompt('Sblocca Walleet');
      }
    } catch {}
  }

  document.addEventListener('DOMContentLoaded', () => {
    hookButtons();
    autoPromptIfEnabled();
  });

  const mo = new MutationObserver(hookButtons);
  mo.observe(document.documentElement, { subtree: true, childList: true });
  setInterval(hookButtons, 1000);

  document.addEventListener('visibilitychange', () => {
    if (!document.hidden) autoPromptIfEnabled();
  });
})();
EOF

            # Inietta lo shim prima di </body> (case-insensitive)
            perl -0777 -pe 's#</body>#  <script type="module" src="./shim-biometric.js"></script>\n</body>#igs' -i www/index.html || true
          else
            echo "legacy_www_final non trovato: fallback a build Vite"
            npm run build
          fi

      - name: Setup Java 21
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "21"
          cache: "gradle"

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Accept SDK licenses
        run: yes | sdkmanager --licenses

      - name: Install SDK packages (API 35)
        run: |
          sdkmanager --install "platform-tools" "build-tools;35.0.0" "platforms;android-35" || true

      - name: Make gradlew executable
        run: chmod +x android/gradlew

      - name: Compute version code/name
        shell: bash
        run: |
          RUN_NO="${GITHUB_RUN_NUMBER:-0}"
          VERSION_CODE=$((100000 + RUN_NO))
          VERSION_NAME="$(node_
